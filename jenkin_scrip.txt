pipeline {
    agent any

    environment {
        // In MacOS, run command: which docker
        dockerPath = "${docker_path}"
        registry = "${dockerhub_id}/docker-jenkins-maven"
        username = "${dockerhub_id}"
        password = "${dockerhub_password}"
    }

    tools {
        maven 'Maven 3.8.1'
        gradle 'Gradle'
    }

    stages {
        stage('Cloning git') {
            steps {
                // Get source code from github repository
                git '${repository_url}'
            }
        }
        stage('Build source') {
            steps {
                // Run Maven on a Unix agent.
                sh 'mvn -f docker-jenkins-maven/pom.xml clean install'
                sh 'gradle clean build --build-file docker-jenkins-gradle/build.gradle'
                sh 'gradle clean build --build-file docker-spring-mysql/build.gradle'
            }
        }
        stage('Build docker') {
            steps {
                script {
                    // sh "$dockerPath build -t $registry:$BUILD_NUMBER ."
                    sh "$dockerPath compose up -d"
                }
            }
        }
        stage('Push docker') {
            steps {
                // sh "$dockerPath login --username=$username --password=$password"
                // sh "$dockerPath push $registry:$BUILD_NUMBER"
                // sh "$dockerPath push $registry"
                echo 'Push docker'
            }
        }
        stage('Remove Unused docker image') {
            steps {
                // Remove Unused docker image
                // sh "$dockerPath rmi $registry:$BUILD_NUMBER"
                // sh "$dockerPath rmi $registry"
                áº¹cho 'Remove Unused docker image'
            }
        }
        stage('Restart server') {
            steps {
                echo 'Restart server'
            }
        }
        stage('Unit test') {
            steps {
                echo 'Unit test'
            }
        }
        stage('Restart') {
            steps {
                echo 'Restart'
            }
        }
    }
}