version: "3.9"
services:
  docker-jenkins-maven:
    image: anhtruong10391/docker-jenkins-maven
    build:
      # Setting path to run build image (include Dockerfile file)
      context: ./docker-jenkins-maven
    ports:
      - 9000:9000
    restart: always
#    networks:
#      - employee_network
  docker-jenkins-gradle:
    image: anhtruong10391/docker-jenkins-gradle
    build:
      # Setting path to run build image (include Dockerfile file)
      context: ./docker-jenkins-gradle
    ports:
      - 9001:9001
    restart: always
#    networks:
#      - employee_network
  # Definition of db service
  db:
    image: mysql/mysql-server:latest
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: employee_manage
      MYSQL_ROOT_HOST: '%'
    ports:
      - 3307:3307
    restart: always
    networks:
      - employee_network
    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker-spring-mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
  #  Definition of employee-service service
  employee-service:
    image: anhtruong10391/docker-spring-mysql
    container_name: employee-service-container
    build:
      # Setting path to run build image (include Dockerfile file)
      context: ./docker-spring-mysql
    ports:
      - 9002:9002
    restart: always
    depends_on:
      - db
    networks:
      - employee_network
    links:
      - "mysqldb:mysql/mysql-server:latest"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb/employee_manage?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
networks:
  employee_network: